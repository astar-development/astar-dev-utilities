<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AStar.Dev.Utilities</name>
    </assembly>
    <members>
        <member name="T:AStar.Utilities.Constants">
            <summary>
            The <see href="Constants"></see>see> class contains static / constant properties to simplify and centralise various settings.
            </summary>
        </member>
        <member name="P:AStar.Utilities.Constants.WebDeserialisationSettings">
            <summary>
            Returns an instance of <see href="JsonSerializerOptions"></see> configured with the Web defaults.
            </summary>
        </member>
        <member name="T:AStar.Utilities.EnumExtensions">
             <summary>
             </summary>
        </member>
        <member name="M:AStar.Utilities.EnumExtensions.ParseEnum``1(System.String)">
             <summary>
             </summary>
             <typeparam name="T"></typeparam>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="T:AStar.Utilities.ObjectExtensions">
            <summary>
            The <see cref="T:AStar.Utilities.ObjectExtensions" /> class contains some useful methods to enable various tasks
            to be performed in a more fluid, English sentence, style.
            </summary>
        </member>
        <member name="M:AStar.Utilities.ObjectExtensions.ToJson``1(``0)">
            <summary>
            The ToJson method, as you might expect, converts the supplied object to its JSON equivalent.
            </summary>
            <param name="object">The object to convert to JSON.</param>
            <returns>The JSON string of the object supplied.</returns>
        </member>
        <member name="T:AStar.Utilities.StringExtensions">
            <summary>
            The <see cref="T:AStar.Utilities.StringExtensions" /> class contains some useful methods to enable checks to be
            performed in a more fluid, English sentence, style.
            </summary>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.IsNull(System.String)">
            <summary>
            The IsNull method, as you might expect, checks whether the string is, in fact, null.
            </summary>
            <param name="value">The string to check for being null.</param>
            <returns>True if the string is null, False otherwise.</returns>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.IsNotNull(System.String)">
            <summary>
            The IsNotNull method, as you might expect, checks whether the string is not null.
            </summary>
            <param name="value">The string to check for being not null.</param>
            <returns>True if the string is not null, False otherwise.</returns>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            The IsNullOrWhiteSpace method, as you might expect, checks whether the string is, in fact, null, empty or whitespace.
            </summary>
            <param name="value">The string to check for being null, empty or whitespace.</param>
            <returns>True if the string is null, empty or whitespace, False otherwise.</returns>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.IsNotNullOrWhiteSpace(System.String)">
            <summary>
            The IsNotNullOrWhiteSpace method, as you might expect, checks whether the string is not null, empty or whitespace.
            </summary>
            <param name="value">The string to check for being not null, empty or whitespace.</param>
            <returns>True if the string is not null, empty or whitespace, False otherwise.</returns>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.FromJson``1(System.String)">
            <summary>
            The FromJson method, as you might expect, converts the supplied JSON to the specified object.
            </summary>
            <typeparam name="T">The required type of the object to deserialise to.</typeparam>
            <param name="json">The JSON representation of the object.</param>
            <returns>A deserialised object based on the original JSON.</returns>
        </member>
        <member name="M:AStar.Utilities.StringExtensions.FromJson``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            The FromJson method, as you might expect, converts the supplied JSON to the specified object.
            </summary>
            <typeparam name="T">The required type of the object to deserialise to.</typeparam>
            <param name="json">The JSON representation of the object.</param>
            <param name="options">Allows the specific <see href="JsonSerializerOptions">options</see> to be set to control deserialisation.</param>
            <returns>A deserialised object based on the original JSON.</returns>
        </member>
    </members>
</doc>
